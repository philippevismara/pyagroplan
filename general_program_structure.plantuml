@startuml
left to right direction

title General program structure
footer Work in progress

object crops_calendar.csv {
	| crop | begining | ending | quantity |\n| carot | 1 | 6 | 3 |\n| tomato | 2 | 8 | 2 |\n| ... | ... | ... | ... |
}
object crops_data.csv
object crops_interactions.csv
object beds_data.csv


abstract class CropsCalendarLoader {
	{static} load() : CropsCalendar
}
abstract class CropsDataLoader {
	{static} load() : CropsData
}
abstract class BedsDataLoader {
	{static} load() : BedsData
}

object CropsCalendar
object CropsData
object BedsData

crops_calendar.csv --> CropsCalendarLoader
CropsCalendarLoader --> CropsCalendar : creates
crops_data.csv --> CropsDataLoader
crops_interactions.csv --> CropsDataLoader
CropsDataLoader --> CropsData : creates
beds_data.csv --> BedsDataLoader
BedsDataLoader --> BedsData : creates

CropsCalendar *- CropsData

object AgroEcoPlanModel {
	init_model()
	add_constraint()
	add_objective_function()
	configure_solver()
	solve()
	get_solutions()
}
CropsCalendar --* AgroEcoPlanModel
BedsData --* AgroEcoPlanModel
pychoco <- AgroEcoPlanModel : calls

package pychoco {
	note "Model, Constraint,\nIntVar, Solution" as n1
}

object Solution {
	df_assignments
	to_csv()
}
AgroEcoPlanModel --> "*" Solution : returns

abstract class Constraint {
	build(): pychoco.Constraint
}
class CropRotationConstraint
Constraint <|- CropRotationConstraint

AgroEcoPlanModel -> "*" Constraint

object ModelBuilder {
	build(): AgroEcoPlanModel
}
object model.yaml

ModelBuilder <-- model.yaml
Constraint "*" <-- ModelBuilder : creates
AgroEcoPlanModel <-- ModelBuilder : creates
@enduml
